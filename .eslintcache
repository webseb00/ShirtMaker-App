[{"C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\index.js":"1","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\App.js":"2","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\common\\Stepper.js":"3","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ShirtSide\\ShirtSide.js":"4","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ShirtGraphic\\ShirtGraphic.js":"5","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ShirtGraphicStyle\\ShirtGraphicStyle.js":"6","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ShirtGraphic\\ShirtGraphicPreview.js":"7","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ImageFormSummary\\ImageFormSummary.js":"8","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ClientData\\ClientData.js":"9"},{"size":154,"mtime":1606421980982,"results":"10","hashOfConfig":"11"},{"size":3178,"mtime":1607862118605,"results":"12","hashOfConfig":"11"},{"size":2106,"mtime":1607861550736,"results":"13","hashOfConfig":"11"},{"size":3824,"mtime":1607424989564,"results":"14","hashOfConfig":"11"},{"size":2344,"mtime":1607627933643,"results":"15","hashOfConfig":"11"},{"size":2947,"mtime":1607513180483,"results":"16","hashOfConfig":"11"},{"size":701,"mtime":1607082508308,"results":"17","hashOfConfig":"11"},{"size":3601,"mtime":1607889346763,"results":"18","hashOfConfig":"11"},{"size":77,"mtime":1607859402354,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vqgprl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\index.js",[],["45","46"],"C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\App.js",["47","48","49"],"import React, { useState, Component } from 'react';\nimport { Container, Paper, Typography } from '@material-ui/core';\nimport ShirtSide from './components/steps/ShirtSide/ShirtSide';\nimport ShirtGraphic from './components/steps/ShirtGraphic/ShirtGraphic';\nimport ShirtGraphicStyle from './components/steps/ShirtGraphicStyle/ShirtGraphicStyle';\nimport ImageFormSummary from './components/steps/ImageFormSummary/ImageFormSummary';\nimport ClientData from './components/steps/ClientData/ClientData';\nimport { default as Stepper } from './components/common/Stepper';\nimport axios from 'axios';\n\nexport default function App() {\n  const [counter, setCounter] = useState(0);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [nextImageUrl, setNextImageUrl] = useState(null);\n  const [shirtType, setShirtType] = useState('');\n  const [imageStyle, setImageStyle] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [confirmStep, handleConfirmStep] = useState({\n    step1: false,\n    step2: false,\n    step3: false\n  });\n\n  const fetchImage = async () => {\n    const res = await axios.get('https://picsum.photos/200');\n    return res;\n  }\n\n  const handleNextComponent = () => {\n    // validate shirtSide component\n    if(counter === 1) {\n      if(nextImageUrl !== imageUrl) {\n        setImageUrl(nextImageUrl);\n      }\n    }\n    // validate imageFormSummary component\n    if(counter === 3) {\n      const { step1, step2, step3 } = confirmStep;\n      if(step1 === false || step2 === false || step3 === false) {\n        setMessage('Please confirm all steps!');\n        return false;\n      } else {\n        setMessage(null);\n      }\n    }\n\n    setCounter(prevCounter => prevCounter + 1);\n  }\n\n  const displayComponents = () => {\n    switch (counter) {\n      case 0: \n        return <ShirtSide \n                  setImage={setImageUrl}\n                  image={imageUrl} \n                  fetchImage={fetchImage}\n                  setShirt={setShirtType}\n                />;\n      case 1: \n        return <ShirtGraphic \n                  image={imageUrl} \n                  shirtType={shirtType} \n                  fetchImage={fetchImage}\n                  setNext={setNextImageUrl}\n                  nextImage={nextImageUrl}\n                />;\n      case 2: \n        return <ShirtGraphicStyle \n                  image={imageUrl} \n                  shirtType={shirtType}\n                  setStyle={setImageStyle}\n                  imageStyle={imageStyle}\n               />;\n      case 3:\n        return <ImageFormSummary \n                  image={imageUrl}\n                  imageStyle={imageStyle}\n                  shirtType={shirtType}\n                  confirm={confirmStep}\n                  handleConfirm={handleConfirmStep}\n                  setCount={setCounter}\n                  message={message}\n               />;\n      case 4: \n        return <ClientData />\n      default: \n        return 'No component...';\n    }\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      {displayComponents()}  \n      <Stepper \n        counter={counter} \n        setCounter={setCounter} \n        handleNextComponent={handleNextComponent}\n      />\n    </Container>\n  );\n}\n","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\common\\Stepper.js",["50"],"import React, { useState } from 'react';\r\nimport { makeStyles, Typography, Step, StepLabel, Stepper, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  centerContent: {\r\n    textAlign: 'center'\r\n  },\r\n  marginLR: {\r\n    margin: '0 8px'\r\n  }\r\n});\r\n\r\nfunction getSteps() {\r\n  return ['Select side of the shirt', 'Select image to print', 'Select style of the graphic', 'Select image summary', 'Customer Data'];\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper({ counter:  activeStep, setCounter: setActiveStep, handleNextComponent }) {\r\n  const classes = useStyles();\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    // setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    handleNextComponent();\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography>All steps completed</Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className={classes.centerContent}>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                size=\"large\"\r\n                className={classes.marginLR}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={handleNext} \r\n                size=\"large\"\r\n                className={classes.marginLR}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ShirtSide\\ShirtSide.js",["51","52","53","54","55"],"import React, { useState, useEffect } from 'react';\r\nimport { Typography, Card, CardContent, CardActions, Radio, Grid, FormControlLabel, RadioGroup, makeStyles } from '@material-ui/core';\r\nimport ShirtFront from '../../../images/front.png';\r\nimport ShirtBack from '../../../images/back.png';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst useStyles = makeStyles({\r\n  centerImg: {\r\n    textAlign: 'center',\r\n    position: 'relative'\r\n  },\r\n  image: {\r\n    maxWidth: '400px',\r\n    width: '100%',\r\n    '& + img, & ~ div':{\r\n      position:'absolute',\r\n      top: '40%',\r\n      left: '50%',\r\n      transform: 'translate(-50%,-40%)',\r\n    },\r\n    '& + img': {\r\n      maxWidth: '160px',\r\n      width: '100%'\r\n    }\r\n  },\r\n  centerLabel: {\r\n    justifyContent: 'center'\r\n  }\r\n});\r\n\r\nexport default function ShirtSide({ fetchImage, image, setImage, setShirt }) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState({\r\n    front_shirt: true,\r\n    back_shirt: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(!image) { handleInitData(); }\r\n  }, []);\r\n\r\n  const handleInitData = () => {\r\n    const res = fetchImage()\r\n    .then(res => setImage(res.request.responseURL));\r\n    setShirt('front');\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setImage(null);\r\n\r\n    const res = fetchImage()\r\n    .then(res => setImage(res.request.responseURL));\r\n \r\n    let data = null;\r\n    if(e.target.name === 'front_shirt') {\r\n      data = {\r\n        [e.target.name]: e.target.checked,\r\n        back_shirt: false\r\n      }\r\n    } else {\r\n      data = {\r\n        [e.target.name]: e.target.checked,\r\n        front_shirt: false\r\n      }\r\n    }\r\n    setChecked(data);\r\n    setShirt(e.target.name === 'front_shirt' ? 'front' : 'back');\r\n  }\r\n\r\n  const displayImage = () => {\r\n    if(image === null) {\r\n      return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />;\r\n    } else {\r\n      return <img src={image} />\r\n    }\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <Typography variant=\"h2\">\r\n          ShirtSide Component\r\n        </Typography>\r\n        <Grid container justify=\"center\" spacing={3}>\r\n          <Grid item xs={10} sm={6} md={4}>\r\n            <Card>\r\n              <CardContent className={classes.centerImg}>\r\n                <img \r\n                  src={ShirtFront} \r\n                  className={classes.image} \r\n                  alt=\"front shirt\" \r\n                />\r\n                {checked.front_shirt ? displayImage() : ''}\r\n              </CardContent>\r\n              <CardActions className={classes.centerLabel}>\r\n                <FormControlLabel\r\n                  onChange={handleChange} \r\n                  value=\"front\"\r\n                  name=\"front_shirt\"\r\n                  control={<Radio />}\r\n                  label=\"Front Side\"\r\n                  labelPlacement=\"bottom\"\r\n                  checked={checked.front_shirt}\r\n                />\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={10} sm={6} md={4}>\r\n            <Card>\r\n              <CardContent className={classes.centerImg}>\r\n                <img \r\n                  src={ShirtBack} \r\n                  className={classes.image} \r\n                  alt=\"back shirt\"\r\n                />\r\n                {checked.back_shirt ? displayImage() : ''}\r\n              </CardContent>\r\n              <CardActions className={classes.centerLabel}>\r\n                <FormControlLabel\r\n                  onChange={handleChange} \r\n                  value=\"back\"\r\n                  name=\"back_shirt\"\r\n                  control={<Radio />}\r\n                  label=\"Back Side\"\r\n                  labelPlacement=\"bottom\"\r\n                  checked={checked.back_shirt}\r\n                />\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n  )\r\n}","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ShirtGraphic\\ShirtGraphic.js",["56","57"],"import React, { useState, useEffect } from 'react';\r\nimport ShirtGraphicPreview from './ShirtGraphicPreview';\r\nimport { Typography, Grid, Button, makeStyles } from '@material-ui/core';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\n\r\nconst useStyles = makeStyles({\r\n  slider: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%'\r\n  },\r\n  buttons: {\r\n    margin: '10px 0',\r\n    '& > .MuiButton-root': {\r\n      margin: '0 5px'\r\n    }\r\n  }\r\n});\r\n\r\nexport default function ShirtSide({ image, shirtType, fetchImage, setNext, nextImage }) {  \r\n  useEffect(() => {\r\n    setNext(image);\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const [counter, setCounter] = useState(0);\r\n  const images = [image, nextImage];\r\n  \r\n  const slideNextImage = async () => {\r\n    if(counter === 0) {\r\n      const data = fetchImage();\r\n      await data.then(res => setNext(res.request.responseURL));\r\n      setCounter(counter + 1);\r\n    }\r\n  }\r\n\r\n  const slidePrevImage = () => {\r\n    if(counter === 1) {\r\n      setNext(null);\r\n      setCounter(counter - 1);\r\n    }\r\n  }\r\n  \r\n  return (\r\n      <>\r\n        <Typography variant=\"h2\">\r\n          ShirtGraphic Component\r\n        </Typography>\r\n        <Grid container justify=\"center\" spacing={3}>\r\n          <Grid item>\r\n            <ShirtGraphicPreview img={images[counter]} type={shirtType} />\r\n          </Grid>\r\n          <Grid item>\r\n            <div className={classes.slider}>\r\n              <img src={images[counter]} />\r\n              <div className={classes.buttons}>\r\n                <Button\r\n                  disabled={counter === 0 ? true : false} \r\n                  onClick={slidePrevImage} \r\n                  variant=\"contained\" \r\n                  color=\"primary\">\r\n                    <KeyboardArrowLeftIcon />\r\n                </Button>\r\n                <Button \r\n                  disabled={counter === 1 ? true : false}\r\n                  onClick={slideNextImage} \r\n                  variant=\"contained\"\r\n                  color=\"primary\">\r\n                    <KeyboardArrowRightIcon />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    )\r\n}","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ShirtGraphicStyle\\ShirtGraphicStyle.js",["58","59","60"],"import React, { useState, useEffect } from 'react'; \r\nimport { Typography, Radio, RadioGroup, FormControl, FormControlLabel, FormLabel, Slider, makeStyles, Grid,  } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport ShirtGraphicPreview from '../ShirtGraphic/ShirtGraphicPreview';\r\n\r\nconst useStyles = makeStyles({\r\n  radioSlider: {\r\n\r\n  }\r\n});\r\n\r\nexport default function ShirtSide({ image, setStyle, imageStyle, shirtType }) {\r\n  // reset image style\r\n  useEffect(() => {\r\n    setStyle(null);\r\n  }, []);\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState('normal');\r\n  const [imageEffect, setImageEffect] = useState(image);\r\n  const [amount, setAmount] = useState(1);\r\n  // handler for normal, grayscale and first grade of blurred image\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n    loadGraphicStyle(e.target.value);\r\n  }\r\n  // handler for setting amount of blur effect\r\n  const handleSlider = (e, newValue) => {\r\n    setAmount(newValue);\r\n    loadGraphicStyle('blur');\r\n  }\r\n\r\n  const loadGraphicStyle = async (style) => {\r\n    const getImageInfo = await axios.get(image);\r\n    const imageID = getImageInfo.headers['picsum-id']; \r\n\r\n    if(style === 'normal') {\r\n      setStyle(image);\r\n    }\r\n\r\n    if(style === 'grayscale') {\r\n      setStyle(`https://picsum.photos/id/${imageID}/200/?${style}`);\r\n    }\r\n\r\n    if(style === 'blur') {\r\n      setStyle(`https://picsum.photos/id/${imageID}/200/?${style}=${amount}`);\r\n    }\r\n  }\r\n  \r\n  const valuetext = value => `${value}`;\r\n  const img = imageStyle ?? image;\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h2\">\r\n        ShirtGraphicStyle Component\r\n      </Typography>\r\n      <Grid container justify=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <ShirtGraphicPreview img={img} type={shirtType} />\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Select graphic style:</FormLabel>\r\n            <RadioGroup value={value} onChange={handleChange}>\r\n              <FormControlLabel value=\"normal\" control={<Radio />} label=\"Normal\" />\r\n              <FormControlLabel value=\"grayscale\" control={<Radio />} label=\"Grayscale\" />\r\n              <div className={classes.radioSlider}>\r\n                <FormControlLabel value=\"blur\" control={<Radio />} label=\"Blur\" />\r\n                <Slider\r\n                  disabled={value === 'blur' ? false : true} \r\n                  getAriaValueText={valuetext}\r\n                  aria-labelledby=\"discrete-slider\"\r\n                  valueLabelDisplay=\"auto\"\r\n                  defaultValue={1}\r\n                  step={1}\r\n                  min={1}\r\n                  max={10}\r\n                  marks\r\n                  value={amount}\r\n                  onChange={handleSlider}\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ShirtGraphic\\ShirtGraphicPreview.js",["61"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport front from '../../../images/front.png';\r\nimport back from '../../../images/back.png';\r\n\r\nconst useStyles = makeStyles({\r\n  main: {\r\n    position: 'relative'\r\n  },\r\n  image: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    maxWidth: '160px'\r\n  }\r\n});\r\n\r\nconst ShirtGraphicPreview = ({ img, type }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.main}>\r\n      <img src={type === 'front' ? front : back} alt=\"shirt\" />\r\n      <img src={img} className={classes.image} /> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShirtGraphicPreview;","C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ImageFormSummary\\ImageFormSummary.js",["62"],"C:\\Users\\Sebastian\\Documents\\Programowanie\\Projekty\\shirt-maker\\mm\\src\\components\\steps\\ClientData\\ClientData.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"71","line":2,"column":21,"nodeType":"69","messageId":"70","endLine":2,"endColumn":26},{"ruleId":"67","severity":1,"message":"72","line":2,"column":28,"nodeType":"69","messageId":"70","endLine":2,"endColumn":38},{"ruleId":"67","severity":1,"message":"73","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"74","line":2,"column":85,"nodeType":"69","messageId":"70","endLine":2,"endColumn":95},{"ruleId":"75","severity":1,"message":"76","line":40,"column":6,"nodeType":"77","endLine":40,"endColumn":8,"suggestions":"78"},{"ruleId":"67","severity":1,"message":"79","line":43,"column":11,"nodeType":"69","messageId":"70","endLine":43,"endColumn":14},{"ruleId":"67","severity":1,"message":"79","line":51,"column":11,"nodeType":"69","messageId":"70","endLine":51,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":74,"column":14,"nodeType":"82","endLine":74,"endColumn":33},{"ruleId":"75","severity":1,"message":"83","line":26,"column":6,"nodeType":"77","endLine":26,"endColumn":8,"suggestions":"84"},{"ruleId":"80","severity":1,"message":"81","line":58,"column":15,"nodeType":"82","endLine":58,"endColumn":44},{"ruleId":"75","severity":1,"message":"85","line":16,"column":6,"nodeType":"77","endLine":16,"endColumn":8,"suggestions":"86"},{"ruleId":"67","severity":1,"message":"87","line":19,"column":10,"nodeType":"69","messageId":"70","endLine":19,"endColumn":21},{"ruleId":"67","severity":1,"message":"88","line":19,"column":23,"nodeType":"69","messageId":"70","endLine":19,"endColumn":37},{"ruleId":"80","severity":1,"message":"81","line":24,"column":7,"nodeType":"82","endLine":24,"endColumn":50},{"ruleId":"89","severity":1,"message":"90","line":74,"column":13,"nodeType":"82","endLine":74,"endColumn":44},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'Typography' is defined but never used.","'useState' is defined but never used.","'RadioGroup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleInitData' and 'image'. Either include them or remove the dependency array.","ArrayExpression",["93"],"'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'image' and 'setNext'. Either include them or remove the dependency array. If 'setNext' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["94"],"React Hook useEffect has a missing dependency: 'setStyle'. Either include it or remove the dependency array. If 'setStyle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["95"],"'imageEffect' is assigned a value but never used.","'setImageEffect' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [handleInitData, image]",{"range":"102","text":"103"},"Update the dependencies array to be: [image, setNext]",{"range":"104","text":"105"},"Update the dependencies array to be: [setStyle]",{"range":"106","text":"107"},[1058,1060],"[handleInitData, image]",[770,772],"[image, setNext]",[510,512],"[setStyle]"]